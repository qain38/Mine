using System;
using System.Collections.Generic;

interface IBankAccount
{
    void Deposit(double amount);
    void Withdraw(double amount);
}

abstract class BankAccount : IBankAccount
{
    protected string AccountNumber { get; set; }
    protected string AccountHolderName { get; set; }
    protected double Balance { get; set; }

    public BankAccount(string accountNumber, string accountHolderName, double balance)
    {
        AccountNumber = accountNumber;
        AccountHolderName = accountHolderName;
        Balance = balance;
    }

    public abstract void DisplayAccountInfo();
}

class SavingsAccount : BankAccount
{
    protected double InterestRate { get; set; }

    public SavingsAccount(string accountNumber, string accountHolderName, double balance, double interestRate)
        : base(accountNumber, accountHolderName, balance)
    {
        InterestRate = interestRate;
    }

    public override void Deposit(double amount)
    {
        base.Deposit(amount);
        Balance += (amount * InterestRate);
    }

    public override void DisplayAccountInfo()
    {
        Console.WriteLine("Account Number: {0}", AccountNumber);
        Console.WriteLine("Account Holder Name: {0}", AccountHolderName);
        Console.WriteLine("Balance: {0}", Balance);
        Console.WriteLine("Interest Rate: {0}", InterestRate);
    }
}

class CheckingAccount : BankAccount
{
    public CheckingAccount(string accountNumber, string accountHolderName, double balance)
        : base(accountNumber, accountHolderName, balance)
    {
    }

    public override void Withdraw(double amount)
    {
        if (Balance < amount)
        {
            Console.WriteLine("Insufficient funds");
            return;
        }
        base.Withdraw(amount);
    }

    public override void DisplayAccountInfo()
    {
        Console.WriteLine("Account Number: {0}", AccountNumber);
        Console.WriteLine("Account Holder Name: {0}", AccountHolderName);
        Console.WriteLine("Balance: {0}", Balance);
    }
}

class Bank
{
    public List<BankAccount> Accounts { get; set; }

    public Bank()
    {
        Accounts = new List<BankAccount>();
    }

    public void AddAccount(BankAccount account)
    {
        Accounts.Add(account);
    }

    public void DepositToAccount(string accountNumber, double amount)
    {
        foreach (BankAccount account in Accounts)
        {
            if (account.AccountNumber == accountNumber)
            {
                account.Deposit(amount);
                break;
            }
        }
    }

    public void WithdrawFromAccount(string accountNumber, double amount)
    {
        foreach (BankAccount account in Accounts)
        {
            if (account.AccountNumber == accountNumber)
            {
                account.Withdraw(amount);
                break;
            }
        }
    }
}

class Program
{
    static void Main(string[] args)
    {
        Bank bank = new Bank();

        SavingsAccount savingsAccount = new SavingsAccount("123456789", "John Smith", 1000, 0.05);
        CheckingAccount checkingAccount = new CheckingAccount("987654321", "Jane Doe", 500);

        bank.AddAccount(savingsAccount);
        bank.AddAccount(checkingAccount);

        bank.DepositToAccount("123456789", 500);
        bank.WithdrawFromAccount("987654321", 200);

        savingsAccount.DisplayAccountInfo();
        checkingAccount.DisplayAccountInfo();
    }
}
